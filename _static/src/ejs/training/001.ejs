<% let pageId = '001'; %> <% let path = jsonData.pages[pageId].path %>

<!DOCTYPE html>
<html lang="ja">
  <%- include('../common/_head', {pageId:pageId }) %>
  <body data-barba="wrapper">
    <%- include('../common/_header', {pageId:pageId }) %>
    <div id="common-wrapper" class="common-wrapper">
        <div class="container" data-barba="container" data-barba-namespace="home">
          <h1>001</h1>
          <canvas id="myCanvas"></canvas>
        </div>
    </div>
    <%- include('../common/_footer', {pageId:pageId }) %>
      <%-
    include('../common/_script', {pageId:pageId }) %>
    <script src="https://unpkg.com/three@0.147.0/build/three.min.js"></script>
    <script>
      // ページの読み込みを待つ
      window.addEventListener("DOMContentLoaded", init);

      // サイズを指定
      const width = 960;
      const height = 540;

      function init() {
        // レンダラーを作成
        const renderer = new THREE.WebGLRenderer({
          canvas: document.querySelector("#myCanvas"),
        });
        renderer.setSize(width, height);

        // シーンを作成
        const scene = new THREE.Scene();

        // カメラを作成
        const camera = new THREE.PerspectiveCamera(
          45,
          width / height,
          1,
          10000
        );
        camera.position.set(0, 0, +1000);

        // 球体を作成
        const geometry = new THREE.SphereGeometry(300, 30, 30);
        // 画像を読み込む
        const loader = new THREE.TextureLoader();
        const texture = loader.load("../assets/images/earthmap1k.jpg");
        // マテリアルにテクスチャーを設定
        const material = new THREE.MeshStandardMaterial({
          map: texture,
        });
        // メッシュを作成
        const mesh = new THREE.Mesh(geometry, material);
        // 3D空間にメッシュを追加
        scene.add(mesh);

        // 平行光源
        const directionalLight = new THREE.DirectionalLight(0xffffff);
        directionalLight.position.set(1, 1, 1);
        // シーンに追加
        scene.add(directionalLight);

        tick();

        // 毎フレーム時に実行されるループイベントです
        function tick() {
          // メッシュを回転させる
          mesh.rotation.y += 0.01;
          // レンダリング
          renderer.render(scene, camera);

          requestAnimationFrame(tick);
        }
      }
    </script>
  </body>

</html>
